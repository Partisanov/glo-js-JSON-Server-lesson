(()=>{"use strict";const e=e=>{const t=document.getElementById("table-body");t.innerHTML="",e.forEach((e=>{t.insertAdjacentHTML("beforeend",`\n            <tr data-key="${e.id}">\n                <th scope="row">${e.id}</th>\n                <td>${e.name}</td>\n                <td>${e.email}</td>\n                <td>${e.children?"Есть":"Нет"}</td>\n                <td>\n                    <div class="form-check form-switch">\n                        <input class="form-check-input" type="checkbox" role="switch"\n                            id="form-children" ${e.permissions?"checked":""}>\n                    </div>\n                </td>\n                <td>\n                    <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">\n                        <button type="button" class="btn btn-warning btn-edit">\n                            <i class="bi-pencil-square"></i>\n                        </button>\n                        <button type="button" class="btn btn-danger btn-remove">\n                            <i class="bi-person-x"></i>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n        `)}))};window.userService=new class{constructor(e){this._url=e}get url(){return this._url}set url(e){this._url=e}getUsers(){return fetch(this._url).then((e=>{if(this.isValidate(e.ok),e.ok)return e.json()})).catch((e=>console.log(e.message)))}addUser(e){return fetch(this._url,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((e=>e.json())).catch((e=>console.log(e.message)))}removeUser(e){return fetch(`${this._url}/${e}`,{method:"DELETE"}).then((e=>e.json())).catch((e=>console.log(e.message)))}changeUser(e,t){return fetch(`${this._url}/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then((e=>e.json())).catch((e=>console.log(e.message)))}getUser(e){return fetch(`${this._url}/${e}`).then((e=>e.json())).catch((e=>console.log(e.message)))}editUser(e,t){return fetch(`${this._url}/${e}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then((e=>e.json())).catch((e=>console.log(e.message)))}filterUsers(e){return fetch(`${this._url}?${e}=true`).then((e=>e.json())).catch((e=>console.log(e.message)))}getSortUsers(e){return fetch(`${this._url}?_sort=${e.name}&_order=${e.value}`).then((e=>e.json())).catch((e=>console.log(e.message)))}getSearchUsers(e){return fetch(`${this._url}?name_like=${e}`).then((e=>e.json())).catch((e=>console.log(e.message)))}isValidate(e){document.querySelector(".table-responsive").insertAdjacentHTML("beforeend","\n        <div id='errorBlock' class='col d-flex justify-content-center'></div>\n        ");document.getElementById("errorBlock").textContent=e?"":"Произошла ошибка, данных нет!"}}("http://localhost:3000/users"),userService.getUsers().then((t=>e(t))).catch((e=>{console.log(e.message)})),(()=>{const t=document.querySelector("form"),n=t.querySelector("#form-name"),s=t.querySelector("#form-email"),r=t.querySelector("#form-children");t.addEventListener("submit",(c=>{if(c.preventDefault(),!t.dataset.method){const c={name:n.value,email:s.value,children:r.checked,permissions:!1};userService.addUser(c).then((()=>{userService.getUsers().then((t=>e(t))),t.reset()}))}}))})(),document.getElementById("table-body").addEventListener("click",(t=>{if(t.target.closest(".btn-remove")){const n=t.target.closest("tr").dataset.key;userService.removeUser(n).then((()=>{userService.getUsers().then((t=>{e(t)}))}))}})),document.getElementById("table-body").addEventListener("click",(t=>{if(t.target.closest("input[type=checkbox]")){const n=t.target.closest("tr"),s=n.querySelector("input[type=checkbox]"),r=n.dataset.key;userService.changeUser(r,{permissions:s.checked}).then((t=>{userService.getUsers().then((t=>{e(t)}))}))}})),(()=>{const t=document.getElementById("table-body"),n=document.querySelector("form"),s=n.querySelector("#form-name"),r=n.querySelector("#form-email"),c=n.querySelector("#form-children");t.addEventListener("click",(e=>{if(e.target.closest(".btn-edit")){const t=e.target.closest("tr").dataset.key;userService.getUser(t).then((e=>{s.value=e.name,r.value=e.email,c.checked=e.children,n.dataset.method=t}))}})),n.addEventListener("submit",(t=>{if(t.preventDefault(),n.dataset.method){const t=n.dataset.method,o={name:s.value,email:r.value,children:c.checked,permission:!1};userService.editUser(t,o).then((()=>{userService.getUsers().then((t=>e(t))),n.reset(),n.removeAttribute("data-method")}))}}))})(),(()=>{const t=document.getElementById("btn-isChildren"),n=document.getElementById("btn-isPermissions"),s=document.getElementById("btn-isAll");t.addEventListener("click",(()=>{userService.filterUsers("children").then((t=>e(t)))})),n.addEventListener("click",(()=>{userService.filterUsers("permissions").then((t=>e(t)))})),s.addEventListener("click",(()=>{userService.getUsers().then((t=>e(t)))}))})(),(()=>{const t=document.getElementById("sort-is-children");let n=!1;t.style.cursor="pointer",t.addEventListener("click",(()=>{userService.getSortUsers({name:"children",value:n?"asc":"desc"}).then((t=>{e(t)})),n=!n}))})(),(()=>{const t=document.getElementById("search-input"),n=((e,t=300)=>{let n;return(...s)=>{clearInterval(n),n=setTimeout((()=>{e.apply(void 0,s)}),t)}})((()=>{userService.getSearchUsers(t.value).then((t=>{e(t)}))}),500);t.addEventListener("input",n)})()})();